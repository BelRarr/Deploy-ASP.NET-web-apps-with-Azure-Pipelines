# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

variables:
- group: AzureResourcesVariableGroup

trigger: none

stages:
- stage: Build
  jobs:
  - job: Build

    pool:
      vmImage: 'windows-latest'

    variables:
      solution: '**/*.sln'
      buildPlatform: 'Any CPU'
      buildConfiguration: 'Release'

    steps:
    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

 ################## BRANCHE V2 ################################
        
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.BinariesDirectory)'
        includeRootFolder: true
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    #- task: VSTest@2
    #  inputs:
    #    platform: '$(buildPlatform)'
    #    configuration: '$(buildConfiguration)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: DeployAzureResources
  jobs:
  - job: DeployAzureResources
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'labAzureSubscription'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          # create a resource group
          az group create -l $LOCATION -n $RESOURCEGROUPNAME
          
          # create and configure Azure SQL logical server and Azure SQL database
          az sql server create -l $LOCATION -g $RESOURCEGROUPNAME -n $SQLSRVNAME -u $(USERNAME) -p $(PASSWORD)
          az sql db create -g $RESOURCEGROUPNAME -s $SQLSRVNAME -n $DBNAME --service-objective Basic
          az sql server firewall-rule create -g $RESOURCEGROUPNAME -s $SQLSRVNAME -n allowazure --start-ip-address 0.0.0.0 --end-ip-address 0.0.0.0
          
          # create and configure an Azure App Service plan and an Azure web app
          az appservice plan create -g $RESOURCEGROUPNAME -n $SVCPLANNAME --sku FREE
          az webapp create -g $RESOURCEGROUPNAME -p $SVCPLANNAME -n $WEBAPPNAME
      
- stage: DeployASPNETapp
  jobs:
  - job: DeployASPNETapp
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: DownloadBuildArtifacts@1
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'drop'
        downloadPath: '$(System.DefaultWorkingDirectory)'
    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'labAzureSubscription'
        appType: 'webApp'
        WebAppName: '$(WEBAPPNAME)'
        packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'

    - task: AzureAppServiceSettings@1
      inputs:
        azureSubscription: 'labAzureSubscription'
        appName: '$(WEBAPPNAME)'
        resourceGroupName: '$(RESOURCEGROUPNAME)'
        connectionStrings: |
          [
            {
              "name": "MyDbConnection",
              "value": "Server=tcp:$(SQLSRVNAME).database.windows.net,1433;Initial Catalog=tododb;Persist Security Info=False;User ID=$(USERNAME);Password=$(PASSWORD);MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;",
              "type": "SqlAzure",
              "slotSetting": false
            }
          ]
